// Code generated by thriftgo (0.3.4). DO NOT EDIT.

package echo

import (
	"reflect"

	"github.com/cloudwego/thriftgo/thrift_reflection"
)

// IDL Name: api
// IDL Path: api.thrift

var file_api_thrift_go_types = []interface{}{
	(*EchoRequest)(nil),                     // Struct 0: echo.EchoRequest
	(*EchoResponse)(nil),                    // Struct 1: echo.EchoResponse
	(*EchoMultiBoolResponse)(nil),           // Struct 2: echo.EchoMultiBoolResponse
	(*EchoMultiByteResponse)(nil),           // Struct 3: echo.EchoMultiByteResponse
	(*EchoMultiInt16Response)(nil),          // Struct 4: echo.EchoMultiInt16Response
	(*EchoMultiInt32Response)(nil),          // Struct 5: echo.EchoMultiInt32Response
	(*EchoMultiInt64Response)(nil),          // Struct 6: echo.EchoMultiInt64Response
	(*EchoMultiFloatResponse)(nil),          // Struct 7: echo.EchoMultiFloatResponse
	(*EchoMultiDoubleResponse)(nil),         // Struct 8: echo.EchoMultiDoubleResponse
	(*EchoMultiStringResponse)(nil),         // Struct 9: echo.EchoMultiStringResponse
	(*EchoOptionalStructRequest)(nil),       // Struct 10: echo.EchoOptionalStructRequest
	(*EchoOptionalStructResponse)(nil),      // Struct 11: echo.EchoOptionalStructResponse
	(*EchoOptionalMultiBoolRequest)(nil),    // Struct 12: echo.EchoOptionalMultiBoolRequest
	(*EchoOptionalMultiInt32Request)(nil),   // Struct 13: echo.EchoOptionalMultiInt32Request
	(*EchoOptionalMultiStringRequest)(nil),  // Struct 14: echo.EchoOptionalMultiStringRequest
	(*EchoOptionalMultiBoolResponse)(nil),   // Struct 15: echo.EchoOptionalMultiBoolResponse
	(*EchoOptionalMultiInt32Response)(nil),  // Struct 16: echo.EchoOptionalMultiInt32Response
	(*EchoOptionalMultiStringResponse)(nil), // Struct 17: echo.EchoOptionalMultiStringResponse
	(*EchoCustomizedException)(nil),         // Exception 0: echo.EchoCustomizedException
}
var file_api_thrift *thrift_reflection.FileDescriptor
var file_idl_api_rawDesc = []byte{
	0x1f, 0x8b, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xec, 0x5d, 0x5b, 0x73, 0xe2, 0xc8,
	0x15, 0xee, 0x35, 0x78, 0x8c, 0x8d, 0x31, 0xe3, 0xc9, 0x8c, 0x27, 0xb3, 0xc9, 0x66, 0x49, 0xe5,
	0x21, 0x2f, 0x14, 0xc4, 0x98, 0x90, 0xcb, 0x5b, 0x66, 0x66, 0x53, 0xd9, 0xad, 0x38, 0x49, 0xed,
	0x6e, 0x9e, 0x52, 0x79, 0x68, 0xe3, 0x1e, 0xa3, 0x2c, 0x48, 0x8c, 0x24, 0x9c, 0x75, 0x7e, 0x7d,
	0xaa, 0x5b, 0x37, 0x4, 0xf4, 0x55, 0xdd, 0x2d, 0xc1, 0xe8, 0x65, 0xd9, 0x1a, 0xda, 0x7d, 0xce,
	0xf9, 0xce, 0xa7, 0xd6, 0xd1, 0xb9, 0x88, 0x36, 0xf8, 0xc, 0x0, 0x70, 0x6, 0x97, 0xce, 0x20,
	0x9c, 0xf9, 0xce, 0x87, 0xb0, 0x3, 0x8e, 0xda, 0x6d, 0x0, 0xc8, 0x3f, 0x37, 0xff, 0x3, 0x1f,
	0x21, 0x0, 0xa0, 0x8d, 0x3f, 0xd3, 0xef, 0x1b, 0xe9, 0xf7, 0x47, 0xf, 0x1e, 0x5e, 0x85, 0xa6,
	0x33, 0xaf, 0xb, 0x9a, 0xe7, 0xf8, 0x5f, 0xb7, 0xf6, 0x6b, 0x83, 0x23, 0xbc, 0xc3, 0xf7, 0x28,
	0x8, 0xbf, 0x43, 0xfe, 0xa3, 0x33, 0x45, 0x5d, 0xd0, 0xc0, 0x4b, 0x67, 0xb4, 0xa5, 0x5f, 0x4d,
	0x67, 0xde, 0xb7, 0x28, 0x7c, 0xfb, 0x14, 0xa2, 0x73, 0xd0, 0xa0, 0xac, 0x6a, 0xde, 0x3d, 0x85,
	0x8, 0xc4, 0x52, 0x41, 0x7, 0x1c, 0xb7, 0xbb, 0xf8, 0x7f, 0xda, 0xe0, 0x19, 0x0, 0xe0, 0xe5,
	0x70, 0xd8, 0xfb, 0xaf, 0x13, 0xce, 0xbc, 0x55, 0xd8, 0x73, 0xdc, 0xde, 0x12, 0xfa, 0x70, 0x11,
	0x74, 0xc1, 0x9, 0x59, 0x7b, 0x4, 0x5a, 0x78, 0x1d, 0x5b, 0xb6, 0xe7, 0xcd, 0x59, 0xb2, 0x3d,
	0x6f, 0x4e, 0x93, 0xd, 0x44, 0xe4, 0x9c, 0xc7, 0x72, 0xbe, 0x76, 0xc3, 0xeb, 0x9, 0x5d, 0x50,
	0xc3, 0xb9, 0x9e, 0xe8, 0x92, 0x73, 0x33, 0x62, 0xc9, 0xb9, 0x19, 0xe9, 0x92, 0x33, 0x19, 0xb3,
	0xe4, 0x4c, 0xc6, 0x5a, 0xe4, 0xfc, 0x79, 0xee, 0xc1, 0x90, 0x2e, 0xe7, 0xd9, 0xbd, 0xb7, 0xba,
	0x9b, 0x53, 0xe9, 0x21, 0x24, 0xaa, 0x13, 0x8b, 0x7a, 0x4f, 0xb6, 0xb2, 0x23, 0xeb, 0xbb, 0xd0,
	0x77, 0xdc, 0x7, 0x86, 0xac, 0x80, 0x2c, 0x28, 0x24, 0xeb, 0x4, 0xcb, 0xfa, 0xda, 0x65, 0xa0,
	0xb7, 0xce, 0x6, 0xda, 0xf5, 0xdc, 0xf0, 0xd1, 0x47, 0xce, 0xe, 0x6d, 0xd0, 0xc4, 0xe2, 0xde,
	0xa3, 0xf, 0x70, 0x35, 0xf, 0x5b, 0xe0, 0x18, 0x6f, 0xd7, 0x1, 0x27, 0x89, 0xc6, 0x2d, 0xa0,
	0x6a, 0x42, 0xb, 0x9b, 0x20, 0x71, 0x89, 0xaa, 0x19, 0x11, 0x6d, 0xa1, 0x64, 0x45, 0x67, 0x38,
	0xec, 0xdd, 0xc1, 0x0, 0xf5, 0xc2, 0xa7, 0x25, 0x12, 0x3a, 0x78, 0x22, 0x93, 0xc4, 0x4f, 0x3c,
	0x55, 0x93, 0xf0, 0x16, 0xe6, 0x1c, 0x73, 0x1a, 0x73, 0x4b, 0xf4, 0x4c, 0x53, 0x65, 0xd7, 0xf5,
	0xc4, 0x82, 0x11, 0xa2, 0x7, 0x66, 0x25, 0x2f, 0x91, 0xc4, 0x8, 0xd1, 0xd3, 0x58, 0xd5, 0x88,
	0xc9, 0xd8, 0xb4, 0x11, 0x72, 0x47, 0xbd, 0x9a, 0x1d, 0xc9, 0x26, 0x72, 0xa6, 0xe0, 0xad, 0x9e,
	0xcf, 0x50, 0x10, 0x38, 0xd0, 0x1d, 0x40, 0xff, 0x21, 0xf8, 0xfe, 0x69, 0x89, 0x92, 0xd0, 0xe8,
	0x98, 0xe8, 0x2d, 0x61, 0xec, 0x19, 0x36, 0x56, 0xf2, 0x66, 0x63, 0xd3, 0x5a, 0x19, 0xc7, 0x11,
	0x5b, 0x24, 0x6f, 0x66, 0x8a, 0xb6, 0xc4, 0x9b, 0x18, 0xb6, 0xe5, 0xad, 0xe3, 0x42, 0xff, 0x89,
	0xa1, 0xc6, 0x1d, 0x59, 0x50, 0xd0, 0x96, 0x78, 0x13, 0x25, 0x5b, 0x9e, 0xf, 0x87, 0xbd, 0x60,
	0x89, 0xa6, 0xe, 0x9c, 0x8b, 0xdf, 0x75, 0x9a, 0xd8, 0x36, 0xba, 0x42, 0x71, 0xb4, 0x15, 0x2c,
	0x3d, 0x37, 0x28, 0xc8, 0xb9, 0x38, 0xb0, 0xfe, 0xb8, 0x42, 0x41, 0xa8, 0x66, 0xe0, 0x19, 0x36,
	0x30, 0xf4, 0x57, 0xd3, 0x50, 0xc8, 0xb4, 0xf3, 0x24, 0x46, 0xf8, 0xab, 0x13, 0x30, 0x8e, 0x8f,
	0xe6, 0x9c, 0x7c, 0xdd, 0x64, 0xc6, 0x0, 0x5, 0x6f, 0xba, 0x42, 0x22, 0x94, 0x30, 0xb9, 0x1c,
	0xe, 0x7b, 0x53, 0xcf, 0xd, 0xa1, 0xe3, 0x22, 0xbf, 0x87, 0xe5, 0x88, 0x43, 0xf3, 0x14, 0xa2,
	0x82, 0xd0, 0xe0, 0x58, 0xc2, 0x30, 0x34, 0x44, 0x84, 0xb9, 0x6b, 0xbb, 0x93, 0xc6, 0x2b, 0x85,
	0xa0, 0x20, 0x1, 0x89, 0x51, 0x24, 0x22, 0x9, 0xe6, 0x81, 0xb8, 0x19, 0x15, 0x4, 0xe2, 0x66,
	0x64, 0x1a, 0x8, 0x2c, 0xc1, 0x3c, 0x10, 0x93, 0x71, 0x41, 0x20, 0x26, 0x63, 0xd3, 0x40, 0x60,
	0x9, 0x86, 0x81, 0x20, 0x31, 0x4c, 0x21, 0x20, 0x92, 0x58, 0xc3, 0x28, 0x16, 0xa9, 0x10, 0x73,
	0x70, 0x5c, 0x64, 0xd1, 0x59, 0x8d, 0x47, 0x82, 0x47, 0x14, 0xe1, 0x15, 0xc3, 0x23, 0x8e, 0xdf,
	0xcc, 0xe2, 0x91, 0x8, 0x31, 0x8c, 0x47, 0x14, 0x25, 0x16, 0xc3, 0x23, 0x8e, 0x1, 0xcd, 0xe2,
	0x91, 0x8, 0x31, 0x87, 0xc7, 0xf3, 0x24, 0xfc, 0x1a, 0xe1, 0xff, 0xdc, 0xc2, 0x25, 0xe3, 0x21,
	0x72, 0xc1, 0xfa, 0x36, 0xa, 0x8f, 0xcc, 0x46, 0x68, 0x5a, 0x34, 0x50, 0x8e, 0xda, 0xb3, 0x0,
	0x6e, 0x1, 0x97, 0x92, 0xd8, 0x3e, 0x85, 0xc8, 0x28, 0xb6, 0xc5, 0x43, 0x3c, 0x2d, 0x1a, 0x98,
	0xe3, 0xe9, 0x65, 0x8a, 0x25, 0x9, 0x3, 0xd, 0x82, 0xa9, 0x21, 0x48, 0xd4, 0xa1, 0x80, 0x25,
	0x28, 0x6f, 0x46, 0x46, 0xa1, 0x2c, 0x1c, 0x66, 0xea, 0x50, 0xc0, 0x12, 0x94, 0x93, 0xb1, 0x51,
	0x28, 0xb, 0x7, 0xaa, 0x3a, 0x14, 0xb0, 0x1, 0x25, 0x9, 0x66, 0xd, 0x42, 0xa9, 0x27, 0xb4,
	0xd3, 0xa4, 0x83, 0x39, 0x40, 0x5f, 0xa4, 0x80, 0x46, 0xe1, 0x70, 0x8d, 0xa8, 0x3e, 0x44, 0xa3,
	0x80, 0xda, 0x24, 0xa2, 0x5a, 0xc2, 0x6d, 0x4d, 0x3a, 0xd8, 0x40, 0x34, 0xa, 0xc9, 0x4d, 0x22,
	0xaa, 0x25, 0x60, 0xd7, 0xa4, 0x83, 0x39, 0x44, 0x5f, 0xe6, 0xe2, 0x79, 0xfc, 0x88, 0x63, 0x32,
	0xee, 0x14, 0xca, 0x98, 0x96, 0x1a, 0x97, 0x8a, 0x69, 0x68, 0xc5, 0x1f, 0x71, 0x22, 0xb7, 0x4c,
	0x7f, 0x90, 0x20, 0xbd, 0xd2, 0xfe, 0x88, 0x34, 0x34, 0xe7, 0x8f, 0x57, 0xf9, 0xe7, 0x88, 0x72,
	0x1d, 0x12, 0x45, 0xfa, 0x15, 0xf6, 0x47, 0xac, 0xa0, 0x25, 0x77, 0x44, 0x49, 0xed, 0x32, 0xdd,
	0x81, 0x9f, 0x16, 0x2a, 0xed, 0xe, 0xa2, 0xa0, 0x25, 0x77, 0x44, 0xa9, 0xf5, 0x32, 0xdd, 0x81,
	0x9f, 0x38, 0x2a, 0xed, 0xe, 0xa2, 0xa0, 0xd, 0x77, 0xa4, 0x9, 0xfe, 0xf2, 0xdc, 0x91, 0x6,
	0xd8, 0x15, 0xf6, 0x48, 0xa6, 0xa3, 0x39, 0xa7, 0x5c, 0x6d, 0x3c, 0x57, 0xd5, 0x5e, 0xa9, 0x96,
	0x57, 0xb2, 0x62, 0x47, 0x89, 0x5e, 0x49, 0x1e, 0x9d, 0xaa, 0xec, 0x95, 0x54, 0x47, 0x1b, 0x5e,
	0xc9, 0x4a, 0x2e, 0x25, 0x7a, 0x25, 0x79, 0xfc, 0xaa, 0xb2, 0x57, 0x52, 0x1d, 0xd, 0x97, 0x8c,
	0x6f, 0x57, 0xf3, 0xd0, 0x61, 0xf7, 0xe6, 0xbe, 0xca, 0xad, 0xdb, 0xec, 0x2f, 0xa2, 0xfd, 0xd5,
	0xc9, 0x1d, 0xc, 0xd0, 0xb7, 0xba, 0x1a, 0x76, 0x69, 0x42, 0x30, 0x8a, 0x6c, 0x21, 0xca, 0xdd,
	0x3c, 0x47, 0xa2, 0x4a, 0x3c, 0x5b, 0xc0, 0x25, 0x53, 0x7, 0x63, 0xf5, 0xaa, 0x86, 0x6e, 0x1e,
	0x30, 0x1b, 0x9a, 0x5f, 0xe5, 0xd6, 0xe9, 0xe4, 0x81, 0x78, 0x97, 0xb3, 0x39, 0x1e, 0x50, 0xb,
	0x57, 0xf6, 0x78, 0x80, 0x55, 0x50, 0x52, 0x51, 0xf, 0xf, 0x2e, 0x52, 0xff, 0x72, 0x5a, 0xc2,
	0xaf, 0xf2, 0xb, 0xf5, 0x31, 0x41, 0xa2, 0x53, 0xdc, 0x14, 0x11, 0xe8, 0x55, 0x37, 0x5b, 0x3c,
	0x20, 0x1a, 0xa8, 0x28, 0x68, 0x80, 0x5, 0xac, 0x9e, 0xfa, 0xab, 0xfc, 0x42, 0x9d, 0x2c, 0x10,
	0x6e, 0xb5, 0x37, 0xc7, 0x2, 0x5a, 0xc1, 0xd0, 0x1e, 0xb, 0x6e, 0x46, 0x4a, 0x15, 0x4d, 0x3,
	0x2c, 0x60, 0xd, 0x25, 0x5c, 0xe5, 0x17, 0xea, 0x64, 0x81, 0xf0, 0xac, 0x82, 0x39, 0x16, 0xd0,
	0x6a, 0x9d, 0xf6, 0x58, 0x30, 0x19, 0x2b, 0x15, 0x63, 0x75, 0xb3, 0x80, 0x33, 0xd5, 0x71, 0x95,
	0x5f, 0xa8, 0x8f, 0x5, 0x72, 0xb3, 0xf, 0xa6, 0x88, 0xc0, 0x2c, 0x2a, 0xda, 0xe2, 0x42, 0xa2,
	0x84, 0xa2, 0x9a, 0x74, 0x46, 0x7c, 0xc6, 0x9a, 0x8b, 0x39, 0x21, 0xe, 0xed, 0xf7, 0x25, 0x58,
	0xd3, 0x4d, 0xc9, 0xc0, 0x1b, 0x8f, 0x79, 0xbd, 0xb1, 0xb2, 0xe6, 0xcd, 0x3e, 0xf1, 0x46, 0xe6,
	0x24, 0xc9, 0x38, 0xc1, 0x1b, 0x33, 0x7a, 0xbd, 0xb1, 0x52, 0x23, 0x27, 0xa4, 0x66, 0x8f, 0x8c,
	0x71, 0x82, 0x55, 0x4e, 0xb7, 0xc6, 0x89, 0x58, 0x9, 0x45, 0x35, 0xf5, 0x70, 0x22, 0x9a, 0x6b,
	0x81, 0x1, 0xaa, 0xe4, 0x68, 0x30, 0xfb, 0x54, 0xc4, 0x1b, 0x22, 0xe8, 0x46, 0xd6, 0xbe, 0x19,
	0xe, 0x7b, 0xb, 0x14, 0xce, 0xbc, 0xfb, 0x1e, 0x5e, 0xd8, 0x83, 0xae, 0xeb, 0x85, 0x30, 0x74,
	0x3c, 0x57, 0xe, 0x86, 0x2a, 0x8e, 0x13, 0x33, 0x61, 0x20, 0x1b, 0xca, 0x66, 0x1a, 0xb0, 0xa9,
	0x55, 0x9c, 0x39, 0x66, 0x5a, 0x7a, 0x1c, 0xcc, 0x3c, 0x5f, 0x66, 0x3c, 0x74, 0xdd, 0xd4, 0xca,
	0x4d, 0x26, 0x33, 0x4d, 0x6d, 0x38, 0xae, 0xaa, 0xa1, 0x95, 0x9b, 0x5e, 0x66, 0xb3, 0x77, 0xee,
	0xb9, 0xf, 0x2a, 0x96, 0xee, 0xeb, 0x88, 0xf3, 0x7, 0xc9, 0x11, 0xe7, 0x8b, 0xc4, 0xe0, 0xa,
	0x8f, 0x39, 0x33, 0x2d, 0x8e, 0xb7, 0x94, 0x9e, 0x83, 0x88, 0xef, 0x49, 0x7, 0x39, 0x8a, 0xca,
	0x4, 0xec, 0x34, 0xbe, 0xaf, 0xfd, 0xeb, 0xdf, 0x4a, 0x98, 0x1d, 0xea, 0x8c, 0x2a, 0x9b, 0x64,
	0x78, 0x47, 0x29, 0xc0, 0x2e, 0x73, 0xb7, 0xc1, 0x3, 0x1c, 0x65, 0x65, 0xc7, 0x4e, 0xe4, 0x56,
	0xaa, 0xc, 0xd8, 0x41, 0x8e, 0xbc, 0xb2, 0xcf, 0x6d, 0xc7, 0x55, 0x87, 0xeb, 0x20, 0x7, 0x63,
	0xd9, 0xd7, 0x23, 0xbe, 0xad, 0xab, 0xe1, 0x75, 0xd8, 0xf3, 0xb3, 0xec, 0xab, 0x92, 0x4, 0x7,
	0x52, 0xb0, 0xbd, 0xc8, 0x87, 0x7, 0x9f, 0x26, 0x6e, 0xad, 0x68, 0x4f, 0x29, 0xe0, 0xf2, 0xcd,
	0xd9, 0x18, 0xc1, 0x7a, 0xe0, 0x52, 0xa, 0xf4, 0x4b, 0xf2, 0x7e, 0xc3, 0x55, 0xe8, 0xcc, 0x7,
	0x7f, 0x81, 0xc1, 0xec, 0x16, 0x2e, 0x95, 0x5b, 0xb1, 0x8d, 0xa3, 0xbf, 0x97, 0x23, 0x99, 0xe6,
	0xd0, 0xdf, 0x68, 0xbc, 0x36, 0xc, 0xff, 0x5e, 0xe, 0x71, 0x5a, 0x2, 0xff, 0x66, 0x64, 0x1c,
	0xfc, 0x3d, 0x1c, 0xfb, 0xb4, 0x4, 0xfe, 0x64, 0x6c, 0x1c, 0xfc, 0x3d, 0x1c, 0x14, 0xb5, 0x1,
	0x3e, 0x89, 0xf1, 0xc, 0x83, 0xbf, 0xc7, 0x83, 0x90, 0xe6, 0x5c, 0xb0, 0xd9, 0x30, 0x5d, 0xfb,
	0xc0, 0xbe, 0xf, 0x2e, 0xb3, 0x16, 0x3e, 0x6e, 0xdd, 0xa5, 0x6e, 0xfb, 0xdc, 0xbf, 0xb6, 0x4f,
	0x26, 0x73, 0x7e, 0x15, 0x27, 0xf7, 0xfa, 0x69, 0x92, 0xaf, 0xaf, 0x91, 0x4b, 0x75, 0xeb, 0xe8,
	0x81, 0xb5, 0x8e, 0x32, 0xb9, 0xf4, 0x5, 0xde, 0xb1, 0x1f, 0x65, 0x3e, 0xb, 0xb1, 0xe8, 0x45,
	0x8e, 0x45, 0x75, 0xe3, 0xe9, 0x61, 0x35, 0x9e, 0x32, 0x39, 0xf4, 0x25, 0x49, 0x4, 0xf7, 0xe3,
	0x74, 0xb0, 0x5e, 0x16, 0xd5, 0x8d, 0xab, 0x7, 0xd4, 0xb8, 0xca, 0x64, 0xd1, 0xcf, 0x1c, 0x37,
	0xec, 0x93, 0xc, 0xb9, 0x5e, 0x6, 0xd5, 0x4d, 0xaf, 0x7, 0xd4, 0xf4, 0xca, 0xbe, 0x97, 0xcd,
	0x3d, 0xf7, 0xa1, 0x1f, 0x55, 0xd, 0x34, 0x72, 0xa8, 0x6e, 0x99, 0x3d, 0xdc, 0xd6, 0x47, 0xf6,
	0x7d, 0x8d, 0x94, 0x52, 0xfa, 0x71, 0x41, 0xa5, 0x10, 0xa3, 0x7e, 0x92, 0x63, 0x54, 0xdd, 0x4e,
	0xfb, 0xc9, 0x72, 0xea, 0x97, 0xd1, 0x9e, 0xfd, 0xa4, 0xda, 0x54, 0x88, 0x55, 0xe4, 0xe5, 0xee,
	0xb7, 0xa4, 0x61, 0xf1, 0x4f, 0xfc, 0x1e, 0xd1, 0x52, 0x3a, 0x2f, 0x2f, 0xbe, 0x81, 0x8f, 0x30,
	0x52, 0xf1, 0x6f, 0x70, 0x91, 0xc2, 0x70, 0x96, 0x69, 0xbe, 0xd5, 0x7a, 0xe9, 0xc2, 0x5, 0x92,
	0x6c, 0xbd, 0x5c, 0x3, 0xe2, 0xad, 0x61, 0x20, 0x14, 0xbb, 0xf4, 0x44, 0x71, 0x90, 0xf5, 0xfb,
	0xbb, 0xea, 0x99, 0x7b, 0xc4, 0x6b, 0x4a, 0x34, 0x8, 0xc7, 0x7b, 0x61, 0x38, 0x8e, 0x68, 0x44,
	0xf7, 0xd1, 0xc7, 0x6b, 0xa3, 0x49, 0x2f, 0x2c, 0x81, 0xd7, 0x48, 0x2a, 0x76, 0x30, 0x1a, 0x23,
	0x18, 0xe9, 0x4, 0xfb, 0xfb, 0x12, 0x5f, 0x7e, 0x70, 0x5e, 0xc9, 0xae, 0xee, 0xb8, 0x3f, 0xfd,
	0x7c, 0x38, 0xec, 0xe1, 0x13, 0xb4, 0xe7, 0xae, 0xe6, 0x73, 0xe1, 0x64, 0x57, 0x62, 0x59, 0x15,
	0x5b, 0x7a, 0xa5, 0x5f, 0xb7, 0x97, 0x18, 0x73, 0x20, 0x3f, 0xfb, 0xf2, 0x72, 0x93, 0x7a, 0x7,
	0xd9, 0xbc, 0x29, 0xfd, 0xd6, 0xa0, 0x1c, 0x65, 0xf, 0xb0, 0x71, 0x4e, 0xfa, 0x2d, 0x24, 0x79,
	0xda, 0xd7, 0xef, 0xc2, 0x7, 0x0, 0xfc, 0x74, 0xf3, 0xd2, 0xa9, 0xdf, 0x1, 0x5f, 0x18, 0xd3,
	0x37, 0x5b, 0x98, 0xd6, 0x2f, 0xd9, 0x2e, 0x8, 0xe9, 0xe7, 0x5b, 0x90, 0xd6, 0xaf, 0xdf, 0x35,
	0x13, 0xf, 0xac, 0xa6, 0x8c, 0x43, 0xf1, 0xf3, 0xed, 0xc5, 0x7a, 0x7e, 0x72, 0xec, 0xcd, 0xae,
	0x8d, 0xb, 0xfc, 0x0, 0x99, 0x90, 0xe9, 0x3f, 0x5f, 0x17, 0xba, 0x56, 0xec, 0x26, 0x72, 0x8d,
	0x46, 0xaf, 0x4c, 0xc9, 0x6, 0x2d, 0xfe, 0x62, 0x4b, 0x6e, 0x5c, 0x5, 0xe1, 0x98, 0x5c, 0x3c,
	0xaa, 0x65, 0x4b, 0x36, 0x68, 0xf2, 0x2f, 0xb6, 0x4, 0x27, 0xa3, 0xc5, 0x1c, 0x9b, 0xb5, 0xc4,
	0xbe, 0x1c, 0xe9, 0x56, 0x5d, 0xbd, 0xde, 0xc9, 0x21, 0xe3, 0xa8, 0x5d, 0x1d, 0x20, 0xd6, 0x1f,
	0xda, 0x14, 0x7d, 0x9d, 0x2b, 0xf2, 0xc9, 0xb8, 0x69, 0x67, 0x75, 0xb0, 0x92, 0xf, 0x74, 0x5f,
	0x52, 0x29, 0xc6, 0xb3, 0x9a, 0xf7, 0x97, 0x55, 0x7f, 0xec, 0x23, 0x33, 0x99, 0x5f, 0xfd, 0x38,
	0x45, 0xc4, 0x84, 0x2a, 0xa7, 0x1b, 0x50, 0xa2, 0xa4, 0x88, 0x59, 0x24, 0x93, 0xff, 0x6e, 0x15,
	0x84, 0xde, 0xc2, 0xf9, 0x1f, 0xba, 0xaf, 0xbc, 0x81, 0x79, 0x5f, 0x75, 0x40, 0x33, 0xcd, 0x2f,
	0x75, 0xbe, 0x81, 0x8f, 0xf0, 0xdd, 0x1c, 0x6, 0xc1, 0x7a, 0x7a, 0xe9, 0xd7, 0x9e, 0xff, 0x30,
	0x80, 0x4b, 0x38, 0x9d, 0xa1, 0xc1, 0xfd, 0xea, 0xee, 0xce, 0x1b, 0x84, 0x28, 0x8, 0x83, 0x1,
	0x56, 0xe9, 0x9f, 0x1, 0xf2, 0xff, 0xe1, 0x7b, 0x8f, 0xce, 0x3d, 0xf2, 0xdb, 0x44, 0x3c, 0xde,
	0xfe, 0x18, 0x6f, 0xff, 0x82, 0x95, 0xc9, 0x8b, 0xcf, 0xd3, 0x2e, 0x68, 0xb0, 0x20, 0x38, 0x76,
	0x4, 0x92, 0x37, 0x11, 0x6, 0x2d, 0xbc, 0xa3, 0xe3, 0xa3, 0x7b, 0x3a, 0x8, 0x3c, 0x3b, 0xaf,
	0x7e, 0x70, 0x42, 0xf4, 0xe3, 0x0, 0x4d, 0x67, 0xde, 0x60, 0x4d, 0xc7, 0xc4, 0x2c, 0x8a, 0xe,
	0xb9, 0xdf, 0x71, 0xad, 0x94, 0x3d, 0xaf, 0xb7, 0xec, 0x89, 0x94, 0xe4, 0x18, 0xb4, 0xbb, 0x95,
	0x30, 0xb6, 0x8c, 0xa6, 0x79, 0x2b, 0xaa, 0x4a, 0x5, 0xdc, 0xd8, 0x59, 0xd0, 0x3a, 0x9a, 0x98,
	0xa8, 0x2a, 0xc5, 0x14, 0x23, 0x91, 0xc9, 0xd9, 0x50, 0x43, 0xb8, 0x2a, 0x75, 0x42, 0xaa, 0x52,
	0x2c, 0x2d, 0x34, 0x3e, 0xf1, 0x6e, 0x28, 0xb9, 0xab, 0x26, 0xc5, 0x63, 0xc2, 0x6f, 0x18, 0x57,
	0xf0, 0x4e, 0x6f, 0x8b, 0x53, 0x64, 0xad, 0x43, 0x50, 0x7, 0x45, 0xb2, 0xe, 0xc1, 0x32, 0x29,
	0xb2, 0xd6, 0x80, 0x57, 0x1e, 0x45, 0x24, 0xba, 0x4, 0xad, 0x51, 0x64, 0xcd, 0xdb, 0x1c, 0x8a,
	0x50, 0xba, 0xff, 0x8a, 0x73, 0x64, 0xad, 0xfb, 0xaf, 0x3c, 0x8a, 0xac, 0xb7, 0xd7, 0x95, 0xc5,
	0x10, 0x89, 0xe, 0x40, 0xd, 0xfc, 0xb8, 0x16, 0xe1, 0x47, 0xce, 0xd5, 0x32, 0x4, 0xc9, 0x42,
	0x77, 0x1d, 0x4, 0x11, 0xbf, 0x89, 0x1a, 0x24, 0x48, 0x96, 0x5f, 0x2b, 0x8f, 0x20, 0xc2, 0xcd,
	0x7d, 0x16, 0x9, 0x92, 0xb9, 0x5a, 0x86, 0x20, 0x59, 0xdf, 0x9e, 0xe, 0x82, 0xa4, 0x7d, 0x7b,
	0x65, 0x12, 0x24, 0x6b, 0x8c, 0x2b, 0x8f, 0x20, 0xc2, 0xbd, 0x7b, 0x16, 0x9, 0x92, 0xb9, 0x5a,
	0x98, 0x20, 0xb9, 0xa6, 0xbc, 0xe2, 0x4, 0xc9, 0x37, 0x50, 0x95, 0xc7, 0x91, 0x8d, 0xde, 0xa4,
	0xb2, 0x68, 0x22, 0xdd, 0x44, 0x65, 0x8b, 0x2c, 0x39, 0xb7, 0x73, 0xc8, 0x42, 0x6b, 0xb7, 0xab,
	0xd9, 0x72, 0x0, 0x6c, 0x19, 0x89, 0xb0, 0x25, 0xef, 0x77, 0x61, 0xba, 0xe4, 0x53, 0x6c, 0x1a,
	0xe8, 0x92, 0x4b, 0xb3, 0x95, 0x48, 0x97, 0x7c, 0xa9, 0xaa, 0x34, 0xba, 0xc8, 0xbe, 0xdc, 0xd2,
	0x16, 0x5d, 0xf2, 0x7e, 0xe7, 0xd0, 0x85, 0x5e, 0xe, 0xe3, 0x64, 0x84, 0xc4, 0x93, 0x7c, 0xad,
	0x64, 0x7b, 0xf5, 0x84, 0xd0, 0x98, 0x63, 0xf7, 0x4e, 0x3, 0x38, 0x96, 0x33, 0x2a, 0x8c, 0x1c,
	0xd3, 0x9b, 0xbe, 0x78, 0xba, 0xa8, 0xb8, 0xed, 0xbf, 0x95, 0xb4, 0x5d, 0xc8, 0xed, 0xcc, 0xb2,
	0x60, 0x6c, 0x3e, 0x8d, 0xd6, 0xf8, 0xa8, 0x70, 0xa6, 0xc2, 0xc3, 0xb7, 0x5c, 0x8, 0x68, 0xd7,
	0xe7, 0x12, 0x4e, 0x7f, 0x50, 0x95, 0x22, 0x7e, 0xa, 0x68, 0x9d, 0xf1, 0xdd, 0xd0, 0x62, 0xfb,
	0x12, 0xa7, 0x9d, 0x14, 0x16, 0x87, 0x7c, 0x37, 0x74, 0x6c, 0x2a, 0x50, 0xf2, 0x77, 0x82, 0x94,
	0xdc, 0x24, 0x16, 0x87, 0x94, 0xec, 0xca, 0x6d, 0x71, 0x56, 0xae, 0x3f, 0x5f, 0x1b, 0x23, 0x25,
	0x5d, 0x88, 0x3d, 0x4e, 0xe6, 0x1e, 0x90, 0xab, 0x49, 0x49, 0x86, 0x8a, 0x2a, 0x8c, 0xfc, 0xbd,
	0xc, 0x23, 0xd7, 0x59, 0xc5, 0xa1, 0x24, 0xa7, 0xaa, 0xce, 0x9, 0xaa, 0x64, 0x5f, 0x16, 0xae,
	0xcc, 0x4a, 0xcd, 0x6f, 0xb, 0x57, 0x25, 0xae, 0x61, 0xce, 0xb0, 0xb5, 0x54, 0x89, 0xa7, 0xfe,
	0x20, 0x43, 0x9b, 0x9c, 0xe7, 0xa5, 0x8f, 0xb2, 0x1d, 0x25, 0x29, 0x9a, 0x9d, 0xa7, 0xf1, 0x51,
	0xa6, 0x2d, 0xc8, 0xa0, 0x1d, 0x99, 0xd1, 0x61, 0xa6, 0x28, 0x46, 0x98, 0x15, 0xba, 0x4b, 0x5f,
	0x8a, 0x7, 0x9a, 0xdd, 0xd2, 0x97, 0xe5, 0x23, 0x4d, 0xa2, 0x4, 0xc6, 0xe9, 0x40, 0xd1, 0xc0,
	0x4d, 0xd, 0xf7, 0x59, 0x1, 0x6a, 0x6a, 0xb8, 0xd1, 0x6a, 0xce, 0x96, 0x57, 0x94, 0x98, 0x9a,
	0x6f, 0xb5, 0x52, 0x67, 0xa6, 0x4c, 0xda, 0x9c, 0xd7, 0x24, 0xa4, 0x3d, 0x83, 0xa1, 0xca, 0x4d,
	0xed, 0x19, 0xc, 0xd5, 0x38, 0xd1, 0x30, 0x71, 0xf4, 0xdf, 0x6f, 0xff, 0xa8, 0x72, 0xbf, 0xcd,
	0x93, 0xa7, 0xb, 0x9e, 0xb1, 0x9e, 0xcd, 0x69, 0x2d, 0x4d, 0x31, 0x79, 0x68, 0x73, 0x75, 0xa7,
	0x88, 0xdf, 0xfb, 0x74, 0x41, 0x86, 0x61, 0xd3, 0x1d, 0x39, 0x79, 0x30, 0x2, 0x42, 0xf4, 0xe7,
	0x3, 0x17, 0x5, 0x21, 0xba, 0x4f, 0x7f, 0x10, 0x20, 0xf4, 0x57, 0x88, 0xe3, 0xda, 0xcb, 0x69,
	0x6a, 0xc2, 0x2d, 0xa, 0x2, 0xf8, 0xc0, 0x7a, 0x2d, 0x3e, 0x2b, 0x2f, 0xb7, 0x6b, 0x2c, 0xaf,
	0x68, 0x96, 0x69, 0x7, 0xbc, 0x99, 0x77, 0xa2, 0x6, 0xad, 0x2e, 0x68, 0xc5, 0x9f, 0xa7, 0xf1,
	0xe7, 0x19, 0xf9, 0x4, 0xff, 0xf, 0x0, 0x0, 0xff, 0xff, 0x20, 0x4b, 0x82, 0xa, 0x59, 0xa6,
	0x0, 0x0,
}

func init() {
	if file_api_thrift != nil {
		return
	}
	type x struct{}
	builder := &thrift_reflection.FileDescriptorBuilder{
		Bytes:         file_idl_api_rawDesc,
		GoTypes:       file_api_thrift_go_types,
		GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
	}
	file_api_thrift = thrift_reflection.BuildFileDescriptor(builder)
}

func GetFileDescriptorForApi() *thrift_reflection.FileDescriptor {
	return file_api_thrift
}
func (p *EchoRequest) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoRequest")
}

func (p *EchoRequest) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoRequest"
	return ret
}
func (p *EchoResponse) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoResponse")
}

func (p *EchoResponse) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoResponse"
	return ret
}
func (p *EchoMultiBoolResponse) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoMultiBoolResponse")
}

func (p *EchoMultiBoolResponse) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoMultiBoolResponse"
	return ret
}
func (p *EchoMultiByteResponse) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoMultiByteResponse")
}

func (p *EchoMultiByteResponse) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoMultiByteResponse"
	return ret
}
func (p *EchoMultiInt16Response) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoMultiInt16Response")
}

func (p *EchoMultiInt16Response) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoMultiInt16Response"
	return ret
}
func (p *EchoMultiInt32Response) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoMultiInt32Response")
}

func (p *EchoMultiInt32Response) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoMultiInt32Response"
	return ret
}
func (p *EchoMultiInt64Response) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoMultiInt64Response")
}

func (p *EchoMultiInt64Response) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoMultiInt64Response"
	return ret
}
func (p *EchoMultiFloatResponse) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoMultiFloatResponse")
}

func (p *EchoMultiFloatResponse) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoMultiFloatResponse"
	return ret
}
func (p *EchoMultiDoubleResponse) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoMultiDoubleResponse")
}

func (p *EchoMultiDoubleResponse) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoMultiDoubleResponse"
	return ret
}
func (p *EchoMultiStringResponse) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoMultiStringResponse")
}

func (p *EchoMultiStringResponse) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoMultiStringResponse"
	return ret
}
func (p *EchoOptionalStructRequest) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoOptionalStructRequest")
}

func (p *EchoOptionalStructRequest) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoOptionalStructRequest"
	return ret
}
func (p *EchoOptionalStructResponse) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoOptionalStructResponse")
}

func (p *EchoOptionalStructResponse) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoOptionalStructResponse"
	return ret
}
func (p *EchoOptionalMultiBoolRequest) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoOptionalMultiBoolRequest")
}

func (p *EchoOptionalMultiBoolRequest) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoOptionalMultiBoolRequest"
	return ret
}
func (p *EchoOptionalMultiInt32Request) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoOptionalMultiInt32Request")
}

func (p *EchoOptionalMultiInt32Request) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoOptionalMultiInt32Request"
	return ret
}
func (p *EchoOptionalMultiStringRequest) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoOptionalMultiStringRequest")
}

func (p *EchoOptionalMultiStringRequest) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoOptionalMultiStringRequest"
	return ret
}
func (p *EchoOptionalMultiBoolResponse) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoOptionalMultiBoolResponse")
}

func (p *EchoOptionalMultiBoolResponse) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoOptionalMultiBoolResponse"
	return ret
}
func (p *EchoOptionalMultiInt32Response) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoOptionalMultiInt32Response")
}

func (p *EchoOptionalMultiInt32Response) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoOptionalMultiInt32Response"
	return ret
}
func (p *EchoOptionalMultiStringResponse) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetStructDescriptor("EchoOptionalMultiStringResponse")
}

func (p *EchoOptionalMultiStringResponse) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoOptionalMultiStringResponse"
	return ret
}
func (p *EchoCustomizedException) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_api_thrift.GetExceptionDescriptor("EchoCustomizedException")
}

func (p *EchoCustomizedException) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_api_thrift.Filepath
	ret.Name = "EchoCustomizedException"
	return ret
}
