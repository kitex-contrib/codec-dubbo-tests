// Code generated by thriftgo (0.3.2). DO NOT EDIT.

package hello

import (
	"context"
	"fmt"
)

type GreetRequest struct {
	Req string `thrift:"req,1,required" frugal:"1,required,string" json:"req"`
}

func NewGreetRequest() *GreetRequest {
	return &GreetRequest{}
}

func (p *GreetRequest) InitDefault() {
	*p = GreetRequest{}
}

func (p *GreetRequest) GetReq() (v string) {
	return p.Req
}
func (p *GreetRequest) SetReq(val string) {
	p.Req = val
}

func (p *GreetRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GreetRequest(%+v)", *p)
}

type GreetResponse struct {
	Resp string `thrift:"resp,1,required" frugal:"1,required,string" json:"resp"`
}

func NewGreetResponse() *GreetResponse {
	return &GreetResponse{}
}

func (p *GreetResponse) InitDefault() {
	*p = GreetResponse{}
}

func (p *GreetResponse) GetResp() (v string) {
	return p.Resp
}
func (p *GreetResponse) SetResp(val string) {
	p.Resp = val
}

func (p *GreetResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GreetResponse(%+v)", *p)
}

type GreetService interface {
	Greet(ctx context.Context, req string) (r string, err error)

	GreetWithStruct(ctx context.Context, req *GreetRequest) (r *GreetResponse, err error)
}
